#include "progtest.h"

int main() {
  TPHONEBOOK b = {nullptr, 0};
  char tmpStr[100];
  const char *name;
  assert(addPhone(&b, "420", "Czech Republic"));
  assert(addPhone(&b, "42022435", "Czech Republic CVUT"));
  assert(addPhone(&b, "421", "Slovak Republic"));
  assert(addPhone(&b, "44", "Great Britain"));
  strncpy(tmpStr, "USA", sizeof(tmpStr) - 1);
  assert(addPhone(&b, "1", tmpStr));
  strncpy(tmpStr, "Guam", sizeof(tmpStr) - 1);
  assert(addPhone(&b, "1671", tmpStr));
  assert(addPhone(&b, "44", "United Kingdom"));
  assert(b.m_Size == 6);
  assert(!b.m_Root->m_Name);
  assert(!b.m_Root->m_Child[0]);
  assert(!strcmp(b.m_Root->m_Child[1]->m_Name, "USA"));
  assert(!b.m_Root->m_Child[1]->m_Child[0]);
  assert(!b.m_Root->m_Child[1]->m_Child[1]);
  assert(!b.m_Root->m_Child[1]->m_Child[2]);
  assert(!b.m_Root->m_Child[1]->m_Child[3]);
  assert(!b.m_Root->m_Child[1]->m_Child[4]);
  assert(!b.m_Root->m_Child[1]->m_Child[5]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Name);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[0]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[1]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[2]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[3]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[4]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[5]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[6]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Name);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[0]);
  assert(
      !strcmp(b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Name,
              "Guam"));
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Child[0]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Child[1]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Child[2]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Child[3]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Child[4]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Child[5]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Child[6]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Child[7]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Child[8]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[1]->m_Child[9]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[2]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[3]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[4]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[5]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[6]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[7]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[8]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[7]->m_Child[9]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[8]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]->m_Child[9]);
  assert(!b.m_Root->m_Child[1]->m_Child[7]);
  assert(!b.m_Root->m_Child[1]->m_Child[8]);
  assert(!b.m_Root->m_Child[1]->m_Child[9]);
  assert(!b.m_Root->m_Child[2]);
  assert(!b.m_Root->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Name);
  assert(!b.m_Root->m_Child[4]->m_Child[0]);
  assert(!b.m_Root->m_Child[4]->m_Child[1]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Name);
  assert(!strcmp(b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Name,
                 "Czech Republic"));
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[0]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[1]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Name);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[0]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[1]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Name);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[0]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[1]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[2]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[3]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Name);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[0]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[1]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[2]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Name);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[0]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[1]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[2]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[3]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[4]);
  assert(!strcmp(b.m_Root->m_Child[4]
                     ->m_Child[2]
                     ->m_Child[0]
                     ->m_Child[2]
                     ->m_Child[2]
                     ->m_Child[4]
                     ->m_Child[3]
                     ->m_Child[5]
                     ->m_Name,
                 "Czech Republic CVUT"));
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[0]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[1]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[2]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[3]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[4]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[5]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[6]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[7]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[8]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[9]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[6]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[7]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[8]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[9]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[4]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[5]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[6]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[7]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[8]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[9]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[5]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[6]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[7]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[8]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[9]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[4]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[5]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[6]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[7]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[8]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[9]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[4]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[5]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[6]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[7]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[8]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[9]);
  assert(!strcmp(b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Name,
                 "Slovak Republic"));
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Child[0]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Child[1]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Child[2]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Child[4]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Child[5]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Child[6]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Child[7]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Child[8]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]->m_Child[9]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[2]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[4]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[5]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[6]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[7]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[8]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[9]);
  assert(!b.m_Root->m_Child[4]->m_Child[3]);
  assert(!strcmp(b.m_Root->m_Child[4]->m_Child[4]->m_Name, "United Kingdom"));
  assert(!b.m_Root->m_Child[4]->m_Child[4]->m_Child[0]);
  assert(!b.m_Root->m_Child[4]->m_Child[4]->m_Child[1]);
  assert(!b.m_Root->m_Child[4]->m_Child[4]->m_Child[2]);
  assert(!b.m_Root->m_Child[4]->m_Child[4]->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Child[4]->m_Child[4]);
  assert(!b.m_Root->m_Child[4]->m_Child[4]->m_Child[5]);
  assert(!b.m_Root->m_Child[4]->m_Child[4]->m_Child[6]);
  assert(!b.m_Root->m_Child[4]->m_Child[4]->m_Child[7]);
  assert(!b.m_Root->m_Child[4]->m_Child[4]->m_Child[8]);
  assert(!b.m_Root->m_Child[4]->m_Child[4]->m_Child[9]);
  assert(!b.m_Root->m_Child[4]->m_Child[5]);
  assert(!b.m_Root->m_Child[4]->m_Child[6]);
  assert(!b.m_Root->m_Child[4]->m_Child[7]);
  assert(!b.m_Root->m_Child[4]->m_Child[8]);
  assert(!b.m_Root->m_Child[4]->m_Child[9]);
  assert(!b.m_Root->m_Child[5]);
  assert(!b.m_Root->m_Child[6]);
  assert(!b.m_Root->m_Child[7]);
  assert(!b.m_Root->m_Child[8]);
  assert(!b.m_Root->m_Child[9]);
  name = findPhone(&b, "420800123456");
  assert(!strcmp(name, "Czech Republic"));
  name = findPhone(&b, "420224351111");
  assert(!strcmp(name, "Czech Republic CVUT"));
  name = findPhone(&b, "42022435");
  assert(!strcmp(name, "Czech Republic CVUT"));
  name = findPhone(&b, "4202243");
  assert(!strcmp(name, "Czech Republic"));
  name = findPhone(&b, "420224343258985224");
  assert(!strcmp(name, "Czech Republic"));
  name = findPhone(&b, "42");
  assert(!name);
  name = findPhone(&b, "422");
  assert(!name);
  name = findPhone(&b, "4422");
  assert(!strcmp(name, "United Kingdom"));
  name = findPhone(&b, "16713425245763");
  assert(!strcmp(name, "Guam"));
  name = findPhone(&b, "123456789123456789");
  assert(!strcmp(name, "USA"));
  assert(delPhone(&b, "420"));
  assert(delPhone(&b, "421"));
  assert(delPhone(&b, "44"));
  assert(delPhone(&b, "1671"));
  assert(!delPhone(&b, "1672"));
  assert(!delPhone(&b, "1671"));
  name = findPhone(&b, "16713425245763");
  assert(!strcmp(name, "USA"));
  name = findPhone(&b, "4422");
  assert(!name);
  name = findPhone(&b, "420800123456");
  assert(!name);
  name = findPhone(&b, "420224351111");
  assert(!strcmp(name, "Czech Republic CVUT"));
  assert(b.m_Size == 2);
  assert(!b.m_Root->m_Name);
  assert(!b.m_Root->m_Child[0]);
  assert(!strcmp(b.m_Root->m_Child[1]->m_Name, "USA"));
  assert(!b.m_Root->m_Child[1]->m_Child[0]);
  assert(!b.m_Root->m_Child[1]->m_Child[1]);
  assert(!b.m_Root->m_Child[1]->m_Child[2]);
  assert(!b.m_Root->m_Child[1]->m_Child[3]);
  assert(!b.m_Root->m_Child[1]->m_Child[4]);
  assert(!b.m_Root->m_Child[1]->m_Child[5]);
  assert(!b.m_Root->m_Child[1]->m_Child[6]);
  assert(!b.m_Root->m_Child[1]->m_Child[7]);
  assert(!b.m_Root->m_Child[1]->m_Child[8]);
  assert(!b.m_Root->m_Child[1]->m_Child[9]);
  assert(!b.m_Root->m_Child[2]);
  assert(!b.m_Root->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Name);
  assert(!b.m_Root->m_Child[4]->m_Child[0]);
  assert(!b.m_Root->m_Child[4]->m_Child[1]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Name);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Name);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[0]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[1]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Name);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[0]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[1]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Name);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[0]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[1]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[2]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[3]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Name);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[0]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[1]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[2]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Name);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[0]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[1]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[2]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[3]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[4]);
  assert(!strcmp(b.m_Root->m_Child[4]
                     ->m_Child[2]
                     ->m_Child[0]
                     ->m_Child[2]
                     ->m_Child[2]
                     ->m_Child[4]
                     ->m_Child[3]
                     ->m_Child[5]
                     ->m_Name,
                 "Czech Republic CVUT"));
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[0]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[1]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[2]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[3]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[4]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[5]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[6]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[7]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[8]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[5]
              ->m_Child[9]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[6]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[7]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[8]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[3]
              ->m_Child[9]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[4]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[5]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[6]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[7]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[8]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[4]
              ->m_Child[9]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[5]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[6]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[7]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[8]);
  assert(!b.m_Root->m_Child[4]
              ->m_Child[2]
              ->m_Child[0]
              ->m_Child[2]
              ->m_Child[2]
              ->m_Child[9]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[4]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[5]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[6]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[7]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[8]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[2]->m_Child[9]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[4]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[5]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[6]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[7]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[8]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[0]->m_Child[9]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[1]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[2]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[4]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[5]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[6]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[7]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[8]);
  assert(!b.m_Root->m_Child[4]->m_Child[2]->m_Child[9]);
  assert(!b.m_Root->m_Child[4]->m_Child[3]);
  assert(!b.m_Root->m_Child[4]->m_Child[4]);
  assert(!b.m_Root->m_Child[4]->m_Child[5]);
  assert(!b.m_Root->m_Child[4]->m_Child[6]);
  assert(!b.m_Root->m_Child[4]->m_Child[7]);
  assert(!b.m_Root->m_Child[4]->m_Child[8]);
  assert(!b.m_Root->m_Child[4]->m_Child[9]);
  assert(!b.m_Root->m_Child[5]);
  assert(!b.m_Root->m_Child[6]);
  assert(!b.m_Root->m_Child[7]);
  assert(!b.m_Root->m_Child[8]);
  assert(!b.m_Root->m_Child[9]);
  assert(delPhone(&b, "1"));
  assert(delPhone(&b, "42022435"));
  assert(!addPhone(&b, "12345XYZ", "test"));
  assert(b.m_Size == 0);
  assert(!b.m_Root);

  delBook(&b);
  return EXIT_SUCCESS;
}
